
/* Scope Bar Protection Group */
"scopeBarProtectionGroup" = "Protection:";

/* Scope Bar Protection All */
"scopeBarProtectionAllItem" = "All";

/* Scope Bar Protection Write */
"scopeBarProtectionWriteItem" = "Write";

/* Scope Bar Protection Execute */
"scopeBarProtectionExecuteItem" = "Execute";

/* Scope Bar Qualifier Group */
"scopeBarQualifierGroup" = "Qualifier:";

/* Scope Bar Qualifier Signed */
"scopeBarQualifierSignedItem" = "Signed";

/* Scope Bar Qualifier Unsigned */
"scopeBarQualifierUnsignedItem" = "Unsigned";

/* Scope Bar Matching Group */
"scopeBarStringMatchingGroup" = "Matching:";

/* Scope Bar Matching Ignore Case */
"scopeBarStringMatchingIgnoreCaseItem" = "Ignore Case";

/* Scope Bar Matching Null Terminated */
"scopeBarStringMatchingNullTerminatedItem" = "Null Terminated";

/* Scope Bar Endianness Group */
"scopeBarEndiannessGroup" = "Endianness:";

/* Scope Bar Little Endian */
"scopeBarEndianLittleItem" = "Little";

/* Scope Bar Big Endian */
"scopeBarEndianBigItem" = "Big";

/* Scope Bar accessory for Below label when doing > value search; also used for error reporting */
"searchBelowLabel" = "Below";

/* Scope Bar accessory for Above label when doing < value search; also used for error reporting */
"searchAboveLabel" = "Above";

/* Scope Bar accessory for Round Error label when doing = or != float/double value search; also used for error reporting */
"searchRoundErrorLabel" = "Round Error";

/* Equals Operator Title */
"equalsOperatorTitle" = "equals";

/* Not Equals Operator Title */
"notEqualsOperatorTitle" = "is not";

/* Greater Than Operator Title */
"greaterThanOperatorTitle" = "is greater than";

/* Less Than Operator Title */
"lessThanOperatorTitle" = "is less than";

/* Undo Data Type Change Action */
"undoDataTypeChangeAction" = "Data Type Change";

/* Clear Search Variables Action Menu Item Title */
"clearSearchVariablesTitle" = "Clear Search Variables";

/* Clear Variables Action Menu Item Title */
"clearVariablesTitle" = "Clear Variables";

/* Freeze single variable menu item title */
"freezeSingleVariableTitle" = "Freeze Variable";

/* Freeze muitiple variables menu item title */
"freezeMulitipleVariablesTitle" = "Freeze Variables";

/* Unfreeze single variable menu item title */
"unfreezeSingleVariableTitle" = "Unfreeze Variable";

/* Unfreeze muitiple variables menu item title */
"unfreezeMultipleVariablesTitle" = "Unfreeze Variables";

/* Edit single variable value menu item title */
"editSingleVariableValueTitle" = "Edit Variable Value…";

/* Edit multiple variable values menu item title */
"editMultipleVariableValuesTitle" = "Edit Variable Values…";

/* Edit single variable size menu item title */
"editSingleVariableSizeTitle" = "Edit Variable Size…";

/* Edit multiple variable sizes menu item title */
"editMultipleVariableSizesTitle" = "Edit Variable Sizes…";

/* Relativize single variable menu item title */
"relativizeSingleVariableTitle" = "Relativize Variable";

/* Relativize multiple variables menu item title */
"relativizeMultipleVariablesTitle" = "Relativize Variables";

/* NOP single variable menu item title */
"nopSingleVariableTitle" = "NOP Variable";

/* NOP multiple variables menu item title */
"nopMultipleVariablesTitle" = "NOP Variables";

/* Previous Operator menu item title */
"previousOperatorMenuItem" = "Previous Operator";

/* Next Operator menu item title */
"nextOperatorMenuItem" = "Next Operator";

/* Title of Stored Value menu item in search menu of the search field */
"storedValueTokenTitle" = "Stored Value";

/* Name of Stored Value Token in search field */
"storedValueTokenName" = "$StoredValue";

/* Tool tip for Store Values button */
"storeValuesButtonToolTip" = "Store all the values from the target, so you can later make searches based on how these values change";

/* Alert Title that no Stored Values are available when searching with a stored value token */
"noStoredValuesAlertTitle" = "No Stored Values Available";

/* Alert Message that no Stored Values are available when searching with a stored value token */
"noStoredValuesAlertMessage" = "No stored values are available to compare against. Please store values first before proceeding.";

/* Search Finished Notification Title */
"searchFinishedNotificationTitle" = "Search Finished";

/* Undo action name for a Search */
"undoSearchAction" = "Search";

/* Label title for Beginning Address field */
"beginningAddressLabel" = "Beginning Address";

/* Label title for Ending Address field */
"endingAddressLabel" = "Ending Address";

/* Error Message format when Above, Below, Round Error, Beginning Address, Ending Address fields have invalid input */
"invalidFlagsFieldErrorMessageFormat" = "The value corresponding to '%@' needs to be a valid expression or left empty.";

/* Error Message for when Beginning Address >= Ending Address */
"endingAddressIsNotGreaterThanBeginningAddressErrorMessage" = "The value in the Beginning Address field must be less than the value in the Ending Address field, or one or both of the fields can be omitted.";

/* Error message for when the selected data type to seach is a numerical one, and the expression cannot be parsed */
"invalidNumericalSearchExpressionErrorMessage" = "The search value is not a valid numerical expression.";

/* Error Message when attempting to do stored value byte array search */
"storedValueSearchUnsupportedForByteArrays" = "Comparing Stored Values is not supported for Byte Arrays";

/* Error Message when attempting to do stored value strings search */
"storedValueSearchUnsupportedForStrings" = "Comparing Stored Values is not supported for Strings";

/* Error Message when failing to parse a linear stored value expression */
"linearExpressionParseFailureErrorMessage" = "The search expression could not be parsed properly. Please try a simpler expression.";

/* Generic Error Alert Title for when a field could not be parsed properly */
"invalidSearchInputAlertTitle" = "Invalid Search Input";

/* Label for when search is being cancelled */
"cancelingSearchStatusLabel" = "Cancelling search…";

/* Label for when Storing Values is being cancelled */
"cancelingStoringValuesStatusLabel" = "Cancelling Storing Values…";

/* Label for Storing all Values operation is occuring */
"storingValuesStatusLabel" = "Storing All Values…";

/* Alert Title indicating that searching is failing */
"searchFailureAlertTitle" = "Search Failure";

/* Alert Message indicating that searching is failing due to system protections */
"searchFailureSystemProtectionAlertMessageFormat" = "%@'s memory cannot be searched due to system protections.";

/* Alert Message indicating that searching is failing due to the target runnning with elevated privileges */
"searchFailureElevatedPrivilegesAlertMessageFormat" = "%@ cannot be searched because it may be running with elevated privileges.";
